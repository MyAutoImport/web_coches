export default async function handler(req, res) {
  const SITE = process.env.SITE_ORIGIN || 'https://web-coches-eta.vercel.app';
  const SUPABASE_URL = process.env.SUPABASE_URL;
  const SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY;

  let cars = [];
  try {
    if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
      throw new Error('Missing Supabase env');
    }

    const url = new URL(`${SUPABASE_URL}/rest/v1/cars`);
    url.searchParams.set('select', 'id,updated_at,created_at,estado_publicacion');
    // estado_publicacion in (publicado,disponible)
    url.searchParams.set('estado_publicacion', 'in.(publicado,disponible)');
    // ordenar por updated_at desc (nulls first) y limitar
    url.searchParams.set('order', 'updated_at.desc.nullsfirst');
    url.searchParams.set('limit', '5000');

    const r = await fetch(url.toString(), {
      headers: {
        apikey: SUPABASE_ANON_KEY,
        Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
        Accept: 'application/json'
      }
    });

    if (!r.ok) throw new Error(`Supabase error ${r.status}`);
    cars = await r.json();
  } catch (e) {
    console.warn('[sitemap] fallback static:', e.message);
    cars = [];
  }

  const toDate = (v) => {
    try { return new Date(v).toISOString().slice(0,10); }
    catch { return new Date().toISOString().slice(0,10); }
  };

  const urls = [
    { loc: `${SITE}/`, lastmod: new Date().toISOString().slice(0,10), changefreq:'daily', priority:'1.0' },
    // si más páginas estáticas (privacidad, aviso-legal), añádelas aquí
    ...cars.map(c => ({
      loc: `${SITE}/car.html?id=${encodeURIComponent(c.id)}`,
      lastmod: toDate(c.updated_at || c.created_at || Date.now()),
      changefreq:'weekly',
      priority:'0.8'
    }))
  ];

  const xml = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${urls.map(u => `  <url>
    <loc>${u.loc}</loc>
    <lastmod>${u.lastmod}</lastmod>
    <changefreq>${u.changefreq}</changefreq>
    <priority>${u.priority}</priority>
  </url>`).join('\n')}
</urlset>`;

  res.setHeader('Content-Type', 'application/xml; charset=utf-8');
  res.setHeader('Cache-Control', 's-maxage=3600, stale-while-revalidate=86400');
  res.status(200).send(xml);
}
